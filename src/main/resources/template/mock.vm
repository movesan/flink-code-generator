package ${mockPackage};

import com.jd.bdp.jdw.avro.JdwData;
import com.jd.wl.rtdw.common.Constants;
import com.jd.wl.rtdw.common.mock.MockJdwData;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Map;

${classTitle}
public class ${upClassName}Mock extends MockJdwData {

    private static final Logger logger = LoggerFactory.getLogger(Constants.BDP_LOGGER);
    private DateFormat dateFormat = new SimpleDateFormat(Constants.JDW_TIME_FORMAT);

    @Override
    protected void fillCollumn(JdwData jdwData, Map<CharSequence, CharSequence> src, Map<CharSequence, CharSequence> cur) {

        int idMock = idInc.incrementAndGet();

        jdwData.setOpt("UPDATE");

        jdwData.setDb("db" + random.nextLong());
        jdwData.setTab("${tableName}");

        cur.put("ts", dateFormat.format(new Date()));
        src.put("ts", dateFormat.format(new Date()));


        cur.put("status", (idMock + 1) + "");
        src.put("status", idMock + "");
//        src.put("id", idMock + "");
        putCur(cur);
        cur.put("id", "" + (idMock + 1));
    }

    private void putCur(Map<CharSequence, CharSequence> data) {

    }
}